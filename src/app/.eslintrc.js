const eslintPluginVueRules = {
  "vue/attribute-hyphenation": "error",
  "vue/attributes-order": "error",
  "vue/comment-directive": "error",
  "vue/component-name-in-template-casing": ["error", "kebab-case"],
  "vue/jsx-uses-vars": "error",
  "vue/name-property-casing": "error",
  "vue/no-async-in-computed-properties": "error",
  "vue/no-dupe-keys": "error",
  "vue/no-duplicate-attributes": "error",
  "vue/no-parsing-error": "error",
  "vue/no-reserved-keys": "error",
  "vue/no-shared-component-data": "error",
  "vue/no-side-effects-in-computed-properties": "error",
  "vue/no-template-key": "error",
  "vue/no-template-shadow": "error",
  "vue/no-textarea-mustache": "error",
  "vue/no-unused-components": "error",
  "vue/no-unused-vars": "error",
  "vue/no-use-v-if-with-v-for": "error",
  "vue/no-v-html": "error",
  "vue/order-in-components": [
    "error",
    {
      order: [
        "activated",
        "beforeCreate",
        "beforeDestroy",
        "beforeMount",
        "beforeUpdate",
        "comments",
        "components",
        "computed",
        "created",
        "data",
        "deactivated",
        "delimiters",
        "destroyed",
        "directives",
        "el",
        "errorCaptured",
        "extends",
        "filters",
        "functional",
        "inheritAttrs",
        "methods",
        "mixins",
        "model",
        "mounted",
        "name",
        "parent",
        "props",
        "propsData",
        "render",
        "renderError",
        "template",
        "updated",
        "watch",
      ],
    },
  ],
  "vue/prop-name-casing": "error",
  "vue/require-component-is": "error",
  "vue/require-default-prop": "error",
  "vue/require-prop-type-constructor": "error",
  "vue/require-prop-types": "error",
  "vue/require-render-return": "error",
  "vue/require-v-for-key": "error",
  "vue/require-valid-default-prop": "error",
  "vue/return-in-computed-property": "error",
  "vue/this-in-template": "error",
  "vue/use-v-on-exact": "error",
  "vue/v-bind-style": "error",
  "vue/v-on-style": "error",
  "vue/valid-template-root": "error",
  "vue/valid-v-bind": "error",
  "vue/valid-v-cloak": "error",
  "vue/valid-v-else": "error",
  "vue/valid-v-else-if": "error",
  "vue/valid-v-for": "error",
  "vue/valid-v-html": "error",
  "vue/valid-v-if": "error",
  "vue/valid-v-model": "error",
  "vue/valid-v-on": "error",
  "vue/valid-v-once": "error",
  "vue/valid-v-pre": "error",
  "vue/valid-v-show": "error",
  "vue/valid-v-text": "error",
};

const eslintPluginVueRulesDisabledByPrettier = {
  "vue/html-closing-bracket-newline": "off",
  "vue/html-closing-bracket-spacing": "off",
  "vue/html-end-tags": "off",
  "vue/html-indent": "off",
  "vue/html-quotes": "off",
  "vue/html-self-closing": "off",
  "vue/max-attributes-per-line": "off",
  "vue/multiline-html-element-content-newline": "off",
  "vue/mustache-interpolation-spacing": "off",
  "vue/no-multi-spaces": "off",
  "vue/no-spaces-around-equal-signs-in-attribute": "off",
  "vue/script-indent": "off",
  "vue/singleline-html-element-content-newline": "off",
};

module.exports = {
  env: {
    browser: true,
    jest: true,
  },
  parser: "vue-eslint-parser",
  parserOptions: {
    ecmaVersion: 2018,
    parser: "babel-eslint",
    sourceType: "module",
  },
  plugins: ["vue"],
  rules: {
    ...eslintPluginVueRules,
    ...eslintPluginVueRulesDisabledByPrettier,
  },
};
