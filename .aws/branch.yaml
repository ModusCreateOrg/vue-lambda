AWSTemplateFormatVersion: "2010-09-09"
Description: "VueLambda - Branch"

Parameters:
  BranchSlug:
    AllowedPattern: "^(master|develop|release-[a-z0-9-]{1,51}|feature-[a-z0-9-]{1,51})$(?<!-)"
    ConstraintDescription: "BranchSlug must be a valid git branch slug. Allowed pattern: ^(master|develop|release-[a-z0-9-]{1,51}|feature-[a-z0-9-]{1,51})$(?<!-)"
    Description: "The git branch slug, e.g. master"
    Type: "String"
  Subdomain:
    AllowedPattern: "^(www|www-develop|www-release-[a-z0-9-]{1,51}|www-feature-[a-z0-9-]{1,51})$(?<!-)"
    ConstraintDescription: "Subdomain must be a valid subdomain. Allowed pattern: ^(www|www-develop|www-release-[a-z0-9-]{1,51}|www-feature-[a-z0-9-]{1,51})$(?<!-)"
    Description: "The subdomain, e.g. www"
    Type: "String"
  Commit:
    AllowedPattern: "^[a-z0-9-]{40}$"
    ConstraintDescription: "Commit must be a valid git commit SHA. Allowed pattern: ^[a-z0-9-]{40}$"
    Description: "The git commit SHA, e.g. abcdefghijklmnopqrstuvwxyz0123456789abcd"
    Type: "String"

Conditions:
  IsMasterBranch: !Equals [ !Ref "Subdomain", "www" ]

Resources:
  # IAM Roles
  IamRoleLambdaApp:
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSLambdaExecute"
      Path: "/"
    Type: "AWS::IAM::Role"
  IamRoleLambdaViewerRequest:
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSLambdaExecute"
      Path: "/"
    Type: "AWS::IAM::Role"
  # Lambda
  LambdaFunctionApp:
    DependsOn:
      - "IamRoleLambdaApp"
    Properties:
      Code:
        S3Bucket: !ImportValue "VueLambdaS3BucketArtifactsName"
        S3Key: !Sub "${Commit}/app/lambda.zip"
      Description: !Sub "${AWS::StackName}-app"
      FunctionName: !Sub "${AWS::StackName}-app"
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt "IamRoleLambdaApp.Arn"
      Runtime: "nodejs8.10"
      Timeout: 10
    Type: "AWS::Lambda::Function"
  LambdaFunctionViewerRequest:
    DependsOn:
      - "IamRoleLambdaViewerRequest"
    Properties:
      Code:
        S3Bucket: !ImportValue "VueLambdaS3BucketArtifactsName"
        S3Key: !Sub "${Commit}/viewer-request/lambda.zip"
      Description: !Sub "${AWS::StackName}-viewer-request"
      FunctionName: !Sub "${AWS::StackName}-viewer-request"
      Handler: "index.handler"
      MemorySize: 128
      Role: !GetAtt "IamRoleLambdaViewerRequest.Arn"
      Runtime: "nodejs8.10"
      Timeout: 5
    Type: "AWS::Lambda::Function"
  LambdaVersionApp:
    DependsOn:
      - "LambdaFunctionApp"
    Properties:
      FunctionName: !Ref "LambdaFunctionApp"
    Type: "AWS::Lambda::Version"
  LambdaVersionViewerRequest:
    DependsOn:
      - "LambdaFunctionViewerRequest"
    Properties:
      FunctionName: !Ref "LambdaFunctionViewerRequest"
    Type: "AWS::Lambda::Version"
  # CloudFront
  CloudFrontDistribution:
    DependsOn:
      - "LambdaVersionApp"
      - "LambdaVersionViewerRequest"
    Properties:
      DistributionConfig:
        Comment: !Ref "AWS::StackName"
        DefaultCacheBehavior:
          AllowedMethods:
            - "GET"
            - "HEAD"
            - "OPTIONS"
          CachedMethods:
            - "GET"
            - "HEAD"
            - "OPTIONS"
          Compress: false
          DefaultTTL: 31536000
          ForwardedValues:
            Headers:
              - "x-accept-encoding"
            QueryString: false
          LambdaFunctionAssociations:
            - EventType: "viewer-request"
              LambdaFunctionARN: !Ref "LambdaVersionViewerRequest"
            - EventType: "origin-request"
              LambdaFunctionARN: !Ref "LambdaVersionApp"
            - EventType: "origin-response"
              LambdaFunctionARN: !Ref "LambdaVersionApp"
          MaxTTL: 31536000
          MinTTL: 0
          SmoothStreaming: false
          TargetOriginId: !Join [
            "",
            [
              "s3:",
              !ImportValue "VueLambdaS3BucketStaticName",
            ],
          ]
          ViewerProtocolPolicy: "redirect-to-https"
        Enabled: true
        HttpVersion: "http2"
        IPV6Enabled: false
        Origins:
          - DomainName: !ImportValue "VueLambdaS3BucketStaticDomainName"
            Id: !Join [
              "",
              [
                "s3:",
                !ImportValue "VueLambdaS3BucketStaticName",
              ],
            ]
            OriginPath: !Sub "/${BranchSlug}"
            S3OriginConfig:
              OriginAccessIdentity:
                !Join [
                  "",
                  [
                    "origin-access-identity/cloudfront/",
                    !ImportValue "VueLambdaCloudFrontCloudFrontOriginAccessIdentityId",
                  ],
                ]
        PriceClass: "PriceClass_All"
    Type: "AWS::CloudFront::Distribution"
